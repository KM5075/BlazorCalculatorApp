@attribute [TestClass]
@inherits BunitTestContext


@code {
    [TestMethod]
    public void OnButtonClick_InitialState()
    {
        // Arrange
        var calc = Render(@<Calculator />);

        // Assert
        calc.FindAll("div", false).First(o => o.Id == "test").MarkupMatches(@<div class="display" id="test"></div>);
    }

    [TestMethod]
    public void OnButtonClick_InitialState_ByValue()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("div", false).First(o => o.Id == "test");

        // Assert
        Assert.AreEqual("", ele.TextContent);
    }

    [TestMethod]
    public void OnButtonClick_CheckClass()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("div", false).First(o => o.Id == "test");

        // Assert
        Assert.AreEqual("display", ele.ClassName);
    }

    [TestMethod]
    public void ButtonNum_Count()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true);

        // Assert
        Assert.AreEqual(16, ele.Count);
    }

    [TestMethod]
    public void ButtonNum_Id()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true).First(o => o.Id == "Button_0");

        // Assert
        Assert.AreEqual("0", ele.TextContent);
    }

    [TestMethod]
    [DataRow(0, 0)]
    [DataRow(1, 1)]
    [DataRow(2, 2)]
    [DataRow(3, 3)]
    [DataRow(4, 4)]
    [DataRow(5, 5)]
    [DataRow(6, 6)]
    [DataRow(7, 7)]
    [DataRow(8, 8)]
    [DataRow(9, 9)]
    public void NumButton_Click_First(int targetButton, int expectedNum)
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true).First(o => o.Id == "Button_" + targetButton.ToString());

        // Act
        ele.Click();

        // Assert
        var element = calc.FindAll("div", true).First(o => o.Id == "test");
        Assert.AreEqual(expectedNum.ToString(), element.TextContent);

    }

    [TestMethod]
    [DataRow(0, 0)]
    [DataRow(1, 1)]
    [DataRow(2, 2)]
    [DataRow(3, 3)]
    [DataRow(4, 4)]
    [DataRow(5, 5)]
    [DataRow(6, 6)]
    [DataRow(7, 7)]
    [DataRow(8, 8)]
    [DataRow(9, 9)]
    public void NumButton_Click_Second(int targetButton, int expectedNum)
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true).First(o => o.Id == "Button_" + targetButton.ToString());
        var iniText = calc.FindAll("input", true).First(o => o.Id == "test1");

        // Act
        ele.Click();
        // calc.InvokeAsync(() => ele.Click());
        // calc.InvokeAsync(() => ele.Click());

        // Assert
        var element = calc.FindAll("input", true).First(o => o.Id == "test1");
        Assert.AreEqual("11" + expectedNum.ToString(), element.TextContent);

    }

}
