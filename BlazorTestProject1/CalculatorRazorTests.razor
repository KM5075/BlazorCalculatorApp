@attribute [TestClass]
@inherits BunitTestContext

@code {
    /// <summary>
    /// Test for initial state after button click.
    /// </summary>
    [TestMethod]
    public void OnButtonClick_InitialState()
    {
        // Arrange
        var calc = Render(@<Calculator />);

        // Assert
        calc.FindAll("div", false).First(o => o.Id == "test").MarkupMatches(@<div class="display" id="test"></div>);
    }

    /// <summary>
    /// Test for initial state by value after button click.
    /// </summary>
    [TestMethod]
    public void OnButtonClick_InitialState_ByValue()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("div", false).First(o => o.Id == "test");

        // Assert
        Assert.AreEqual("", ele.TextContent);
    }

    /// <summary>
    /// Test for checking class after button click.
    /// </summary>
    [TestMethod]
    public void OnButtonClick_CheckClass()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("div", false).First(o => o.Id == "test");

        // Assert
        Assert.AreEqual("display", ele.ClassName);
    }

    /// <summary>
    /// Test for counting the number of buttons.
    /// </summary>
    [TestMethod]
    public void ButtonNum_Count()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true);

        // Assert
        Assert.AreEqual(16, ele.Count);
    }

    /// <summary>
    /// Test for checking the id of a button.
    /// </summary>
    [TestMethod]
    public void ButtonNum_Id()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true).First(o => o.Id == "Button_0");

        // Assert
        Assert.AreEqual("0", ele.TextContent);
    }

    /// <summary>
    /// Test for clicking a number button and checking the result.
    /// </summary>
    /// <param name="targetButton">The target button number.</param>
    /// <param name="expectedNum">The expected number.</param>
    [TestMethod]
    [DataRow(0, 0)]
    [DataRow(1, 1)]
    [DataRow(2, 2)]
    [DataRow(3, 3)]
    [DataRow(4, 4)]
    [DataRow(5, 5)]
    [DataRow(6, 6)]
    [DataRow(7, 7)]
    [DataRow(8, 8)]
    [DataRow(9, 9)]
    public void NumButton_Click_First(int targetButton, int expectedNum)
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true).First(o => o.Id == "Button_" + targetButton.ToString());

        // Act
        ele.Click();

        // Assert
        var element = calc.FindAll("div", true).First(o => o.Id == "test");
        Assert.AreEqual(expectedNum.ToString(), element.TextContent);
    }

    /// <summary>
    /// Test for clicking a number button after clicking the first button and checking the result.
    /// </summary>
    /// <param name="targetButton">The target button number.</param>
    /// <param name="expectedNum">The expected number.</param>
    [TestMethod]
    [DataRow(0, 0)]
    [DataRow(1, 1)]
    [DataRow(2, 2)]
    [DataRow(3, 3)]
    [DataRow(4, 4)]
    [DataRow(5, 5)]
    [DataRow(6, 6)]
    [DataRow(7, 7)]
    [DataRow(8, 8)]
    [DataRow(9, 9)]
    public void NumButton_Click_Second(int targetButton, int expectedNum)
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true).First(o => o.Id == "Button_" + targetButton.ToString());
        var iniText = calc.FindAll("div", true).First(o => o.Id == "test");

        // Act
        calc.FindAll("button", true).First(o => o.Id == "Button_1").Click();
        calc.FindAll("button", true).First(o => o.Id == "Button_" + targetButton.ToString()).Click();

        // Assert
        var element = calc.FindAll("div", true).First(o => o.Id == "test");
        Assert.AreEqual("1" + expectedNum.ToString(), element.TextContent);
    }

    /// <summary>
    /// Test for clicking the add operator button and checking the result.
    /// </summary>
    [TestMethod]
    public void AddOperator_Click()
    {
        // Arrange
        var calc = Render(@<Calculator />);
        var ele = calc.FindAll("button", true).First(o => o.Id == "Button_+");

        // Act
        calc.FindAll("button", true).First(o => o.Id == "Button_1").Click();
        calc.FindAll("button", true).First(o => o.Id == "Button_1").Click();
        calc.FindAll("button", true).First(o => o.Id == "Button_+").Click();
        calc.FindAll("button", true).First(o => o.Id == "Button_1").Click();
        calc.FindAll("button", true).First(o => o.Id == "Button_1").Click();
        calc.FindAll("button", true).First(o => o.Id == "Button_=").Click();

        // Assert
        var element = calc.FindAll("div", true).First(o => o.Id == "test");
        Assert.AreEqual("22", element.TextContent);
    }
}
